@import "variables";

@font-face {
  font-family: '#{$icomoon-font-family}';
  src:  url('#{$icomoon-font-path}/#{$icomoon-font-family}.eot?tks8fx');
  src:  url('#{$icomoon-font-path}/#{$icomoon-font-family}.eot?tks8fx#iefix') format('embedded-opentype'),
        url('#{$icomoon-font-path}/#{$icomoon-font-family}.ttf?tks8fx') format('truetype'),
        url('#{$icomoon-font-path}/#{$icomoon-font-family}.woff?tks8fx') format('woff'),
        url('#{$icomoon-font-path}/#{$icomoon-font-family}.svg?tks8fx##{$icomoon-font-family}') format('svg');

  font-weight: normal;
  font-style: normal;
  font-display: block;
}

@mixin icon {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: '#{$icomoon-font-family}' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

[class^="icon-"], [class*=" icon-"] {
  @include icon;
}

.icon-connect {
  &:before {
    content: $icon-connect; 
  }
}
.icon-upload {
  &:before {
    content: $icon-upload; 
  }
}
.icon-pending {
  &:before {
    content: $icon-pending; 
  }
}
.icon-reload {
  &:before {
    content: $icon-reload; 
  }
}
.icon-warning {
  &:before {
    content: $icon-warning; 
  }
}
.icon-cancel {
  &:before {
    content: $icon-cancel; 
  }
}
.icon-canceled {
  &:before {
    content: $icon-canceled; 
  }
}
.icon-success {
  &:before {
    content: $icon-success; 
  }
}
.icon-progress {
  &:before {
    content: $icon-progress; 
  }
}
.icon-toggle-open {
  &:before {
    content: $icon-toggle-open; 
  }
}
.icon-toggle-close {
  &:before {
    content: $icon-toggle-close; 
  }
}
.icon-github {
  &:before {
    content: $icon-github; 
  }
}
.icon-npm {
  &:before {
    content: $icon-npm; 
  }
}